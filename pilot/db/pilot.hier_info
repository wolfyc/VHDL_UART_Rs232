|pilot
clk => anti_rebond:tx_button_controller.clk
clk => uart:UART_transceiver.clk
reset_n => uart:UART_transceiver.rst
tx_enable => anti_rebond:tx_button_controller.bouton_in
tx_data_in[0] => uart:UART_transceiver.data_in[0]
tx_data_in[1] => uart:UART_transceiver.data_in[1]
tx_data_in[2] => uart:UART_transceiver.data_in[2]
tx_data_in[3] => uart:UART_transceiver.data_in[3]
tx_data_in[4] => uart:UART_transceiver.data_in[4]
tx_data_in[5] => uart:UART_transceiver.data_in[5]
tx_data_in[6] => uart:UART_transceiver.data_in[6]
tx_data_in[7] => uart:UART_transceiver.data_in[7]
rx_data_out[0] <= uart:UART_transceiver.data_out[0]
rx_data_out[1] <= uart:UART_transceiver.data_out[1]
rx_data_out[2] <= uart:UART_transceiver.data_out[2]
rx_data_out[3] <= uart:UART_transceiver.data_out[3]
rx_data_out[4] <= uart:UART_transceiver.data_out[4]
rx_data_out[5] <= uart:UART_transceiver.data_out[5]
rx_data_out[6] <= uart:UART_transceiver.data_out[6]
rx_data_out[7] <= uart:UART_transceiver.data_out[7]
rx => uart:UART_transceiver.rx
tx <= uart:UART_transceiver.tx


|pilot|anti_rebond:tx_button_controller
clk => etat_courant.CLK
clk => stabil_counter[0].CLK
clk => stabil_counter[1].CLK
clk => stabil_counter[2].CLK
clk => stabil_counter[3].CLK
clk => stabil_counter[4].CLK
clk => stabil_counter[5].CLK
clk => stabil_counter[6].CLK
clk => stabil_counter[7].CLK
clk => stabil_counter[8].CLK
clk => stabil_counter[9].CLK
clk => stabil_counter[10].CLK
clk => stabil_counter[11].CLK
clk => stabil_counter[12].CLK
clk => stabil_counter[13].CLK
clk => stabil_counter[14].CLK
clk => stabil_counter[15].CLK
bouton_in => p_Debounce.IN1
bouton_in => etat_courant.DATAB
bouton_out <= etat_courant.DB_MAX_OUTPUT_PORT_TYPE


|pilot|UART:UART_transceiver
clk => baude_rate:B_rate.clk
clk => transmission:tx_module.clk
clk => reception:rx_module.clk
rst => baude_rate:B_rate.rst
rst => transmission:tx_module.rst
rst => reception:rx_module.rst
t_launch => transmission:tx_module.t_launch
data_in[0] => transmission:tx_module.tx_in[0]
data_in[1] => transmission:tx_module.tx_in[1]
data_in[2] => transmission:tx_module.tx_in[2]
data_in[3] => transmission:tx_module.tx_in[3]
data_in[4] => transmission:tx_module.tx_in[4]
data_in[5] => transmission:tx_module.tx_in[5]
data_in[6] => transmission:tx_module.tx_in[6]
data_in[7] => transmission:tx_module.tx_in[7]
data_out[0] <= reception:rx_module.rx_out[0]
data_out[1] <= reception:rx_module.rx_out[1]
data_out[2] <= reception:rx_module.rx_out[2]
data_out[3] <= reception:rx_module.rx_out[3]
data_out[4] <= reception:rx_module.rx_out[4]
data_out[5] <= reception:rx_module.rx_out[5]
data_out[6] <= reception:rx_module.rx_out[6]
data_out[7] <= reception:rx_module.rx_out[7]
rx => reception:rx_module.rx_in
tx <= transmission:tx_module.tx_out


|pilot|UART:UART_transceiver|baude_rate:B_rate
rst => countx16[0].ACLR
rst => countx16[1].ACLR
rst => countx16[2].ACLR
rst => countx16[3].ACLR
rst => countx16[4].ACLR
rst => countx16[5].ACLR
rst => countx16[6].ACLR
rst => countx16[7].ACLR
rst => countx16[8].ACLR
rst => countx1[0].ACLR
rst => countx1[1].ACLR
rst => countx1[2].ACLR
rst => countx1[3].ACLR
rst => countx1[4].ACLR
rst => countx1[5].ACLR
rst => countx1[6].ACLR
rst => countx1[7].ACLR
rst => countx1[8].ACLR
rst => countx1[9].ACLR
rst => countx1[10].ACLR
rst => countx1[11].ACLR
rst => countx1[12].ACLR
rst => tickx16.ACLR
rst => tick.ACLR
clk => countx16[0].CLK
clk => countx16[1].CLK
clk => countx16[2].CLK
clk => countx16[3].CLK
clk => countx16[4].CLK
clk => countx16[5].CLK
clk => countx16[6].CLK
clk => countx16[7].CLK
clk => countx16[8].CLK
clk => countx1[0].CLK
clk => countx1[1].CLK
clk => countx1[2].CLK
clk => countx1[3].CLK
clk => countx1[4].CLK
clk => countx1[5].CLK
clk => countx1[6].CLK
clk => countx1[7].CLK
clk => countx1[8].CLK
clk => countx1[9].CLK
clk => countx1[10].CLK
clk => countx1[11].CLK
clk => countx1[12].CLK
clk => tickx16.CLK
clk => tick.CLK
br_X1_tick <= tick.DB_MAX_OUTPUT_PORT_TYPE
br_X16_tick <= tickx16.DB_MAX_OUTPUT_PORT_TYPE


|pilot|UART:UART_transceiver|transmission:tx_module
clk => tx_out~reg0.CLK
clk => start_rst.CLK
clk => bit_counter_rst.CLK
clk => bit_counter[0].CLK
clk => bit_counter[1].CLK
clk => bit_counter[2].CLK
clk => bit_counter[3].CLK
clk => tx_stored_data[0].CLK
clk => tx_stored_data[1].CLK
clk => tx_stored_data[2].CLK
clk => tx_stored_data[3].CLK
clk => tx_stored_data[4].CLK
clk => tx_stored_data[5].CLK
clk => tx_stored_data[6].CLK
clk => tx_stored_data[7].CLK
clk => t_launch_detected.CLK
clk => tx_etat~5.DATAIN
rst => t_launch_detector.IN1
rst => bit_counter_counter.IN1
rst => tx_etat.OUTPUTSELECT
rst => tx_etat.OUTPUTSELECT
rst => tx_etat.OUTPUTSELECT
rst => tx_etat.OUTPUTSELECT
rst => bit_counter_rst.OUTPUTSELECT
rst => start_rst.OUTPUTSELECT
rst => tx_out.OUTPUTSELECT
t_launch => t_launch_detector.IN1
br_X1_tick => bit_counter_counter.IN1
br_X1_tick => bit_counter_rst.OUTPUTSELECT
br_X1_tick => start_rst.OUTPUTSELECT
br_X1_tick => tx_out.OUTPUTSELECT
br_X1_tick => tx_etat.OUTPUTSELECT
br_X1_tick => tx_etat.OUTPUTSELECT
br_X1_tick => tx_etat.OUTPUTSELECT
br_X1_tick => tx_etat.OUTPUTSELECT
tx_in[0] => tx_stored_data.DATAB
tx_in[1] => tx_stored_data.DATAB
tx_in[2] => tx_stored_data.DATAB
tx_in[3] => tx_stored_data.DATAB
tx_in[4] => tx_stored_data.DATAB
tx_in[5] => tx_stored_data.DATAB
tx_in[6] => tx_stored_data.DATAB
tx_in[7] => tx_stored_data.DATAB
tx_out <= tx_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|pilot|UART:UART_transceiver|reception:rx_module
clk => rx_out[0]~reg0.CLK
clk => rx_out[1]~reg0.CLK
clk => rx_out[2]~reg0.CLK
clk => rx_out[3]~reg0.CLK
clk => rx_out[4]~reg0.CLK
clk => rx_out[5]~reg0.CLK
clk => rx_out[6]~reg0.CLK
clk => rx_out[7]~reg0.CLK
clk => rx_out_temp[0].CLK
clk => rx_out_temp[1].CLK
clk => rx_out_temp[2].CLK
clk => rx_out_temp[3].CLK
clk => rx_out_temp[4].CLK
clk => rx_out_temp[5].CLK
clk => rx_out_temp[6].CLK
clk => rx_out_temp[7].CLK
clk => \machineAetat:bit_counter[0].CLK
clk => \machineAetat:bit_counter[1].CLK
clk => \machineAetat:bit_counter[2].CLK
clk => \machineAetat:bit_duration[0].CLK
clk => \machineAetat:bit_duration[1].CLK
clk => \machineAetat:bit_duration[2].CLK
clk => \machineAetat:bit_duration[3].CLK
clk => rx_etat~5.DATAIN
rst => rx_etat.OUTPUTSELECT
rst => rx_etat.OUTPUTSELECT
rst => rx_etat.OUTPUTSELECT
rst => rx_etat.OUTPUTSELECT
rst => bit_duration.OUTPUTSELECT
rst => bit_duration.OUTPUTSELECT
rst => bit_duration.OUTPUTSELECT
rst => bit_duration.OUTPUTSELECT
rst => bit_counter.OUTPUTSELECT
rst => bit_counter.OUTPUTSELECT
rst => bit_counter.OUTPUTSELECT
rst => rx_out_temp.OUTPUTSELECT
rst => rx_out_temp.OUTPUTSELECT
rst => rx_out_temp.OUTPUTSELECT
rst => rx_out_temp.OUTPUTSELECT
rst => rx_out_temp.OUTPUTSELECT
rst => rx_out_temp.OUTPUTSELECT
rst => rx_out_temp.OUTPUTSELECT
rst => rx_out_temp.OUTPUTSELECT
rst => rx_out.OUTPUTSELECT
rst => rx_out.OUTPUTSELECT
rst => rx_out.OUTPUTSELECT
rst => rx_out.OUTPUTSELECT
rst => rx_out.OUTPUTSELECT
rst => rx_out.OUTPUTSELECT
rst => rx_out.OUTPUTSELECT
rst => rx_out.OUTPUTSELECT
tickx16 => rx_out_temp.OUTPUTSELECT
tickx16 => rx_out_temp.OUTPUTSELECT
tickx16 => rx_out_temp.OUTPUTSELECT
tickx16 => rx_out_temp.OUTPUTSELECT
tickx16 => rx_out_temp.OUTPUTSELECT
tickx16 => rx_out_temp.OUTPUTSELECT
tickx16 => rx_out_temp.OUTPUTSELECT
tickx16 => rx_out_temp.OUTPUTSELECT
tickx16 => bit_duration.OUTPUTSELECT
tickx16 => bit_duration.OUTPUTSELECT
tickx16 => bit_duration.OUTPUTSELECT
tickx16 => bit_duration.OUTPUTSELECT
tickx16 => bit_counter.OUTPUTSELECT
tickx16 => bit_counter.OUTPUTSELECT
tickx16 => bit_counter.OUTPUTSELECT
tickx16 => rx_etat.OUTPUTSELECT
tickx16 => rx_etat.OUTPUTSELECT
tickx16 => rx_etat.OUTPUTSELECT
tickx16 => rx_etat.OUTPUTSELECT
tickx16 => rx_out.OUTPUTSELECT
tickx16 => rx_out.OUTPUTSELECT
tickx16 => rx_out.OUTPUTSELECT
tickx16 => rx_out.OUTPUTSELECT
tickx16 => rx_out.OUTPUTSELECT
tickx16 => rx_out.OUTPUTSELECT
tickx16 => rx_out.OUTPUTSELECT
tickx16 => rx_out.OUTPUTSELECT
rx_in => rx_out_temp.DATAB
rx_in => rx_out_temp.DATAB
rx_in => rx_out_temp.DATAB
rx_in => rx_out_temp.DATAB
rx_in => rx_out_temp.DATAB
rx_in => rx_out_temp.DATAB
rx_in => rx_out_temp.DATAB
rx_in => rx_out_temp.DATAB
rx_in => rx_out.OUTPUTSELECT
rx_in => rx_out.OUTPUTSELECT
rx_in => rx_out.OUTPUTSELECT
rx_in => rx_out.OUTPUTSELECT
rx_in => rx_out.OUTPUTSELECT
rx_in => rx_out.OUTPUTSELECT
rx_in => rx_out.OUTPUTSELECT
rx_in => rx_out.OUTPUTSELECT
rx_in => rx_etat.OUTPUTSELECT
rx_in => rx_etat.OUTPUTSELECT
rx_in => rx_etat.OUTPUTSELECT
rx_in => rx_etat.OUTPUTSELECT
rx_in => bit_duration.OUTPUTSELECT
rx_in => bit_duration.OUTPUTSELECT
rx_in => bit_duration.OUTPUTSELECT
rx_in => bit_duration.OUTPUTSELECT
rx_in => rx_etat.OUTPUTSELECT
rx_in => rx_etat.OUTPUTSELECT
rx_in => rx_etat.OUTPUTSELECT
rx_in => rx_etat.OUTPUTSELECT
rx_out[0] <= rx_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_out[1] <= rx_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_out[2] <= rx_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_out[3] <= rx_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_out[4] <= rx_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_out[5] <= rx_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_out[6] <= rx_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_out[7] <= rx_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


